# Generated by Django 5.1.2 on 2024-11-17 10:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0005_alter_product_options_remove_category_created_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='product',
            name='bulk_sale_price',
            field=models.IntegerField(blank=True, help_text='Precio de venta por kilo para ventas a granel', null=True, verbose_name='Precio de venta por kilo'),
        ),
        migrations.AddField(
            model_name='product',
            name='bulk_stock',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Stock disponible para venta a granel en kilos', max_digits=10, verbose_name='Stock a granel (kg)'),
        ),
        migrations.AddField(
            model_name='product',
            name='has_bulk_sales',
            field=models.BooleanField(default=False, verbose_name='¿Vende a granel?'),
        ),
        migrations.AddField(
            model_name='product',
            name='kilos_per_sack',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Cantidad de kilos que contiene cada saco', max_digits=6, null=True, verbose_name='Kilos por saco'),
        ),
        migrations.AddField(
            model_name='product',
            name='requires_expiration',
            field=models.BooleanField(default=False, help_text='Indica si el producto necesita control de fecha de vencimiento', verbose_name='Requiere fecha de vencimiento'),
        ),
        migrations.AlterField(
            model_name='product',
            name='stock',
            field=models.IntegerField(default=0, verbose_name='Stock en sacos'),
        ),
        migrations.CreateModel(
            name='ProductStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50, unique=True, verbose_name='Número de lote')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Fecha de vencimiento')),
                ('movement_type', models.CharField(choices=[('IN', 'Entrada'), ('OUT', 'Salida'), ('OPEN', 'Apertura Saco'), ('ADJ', 'Ajuste')], max_length=4, verbose_name='Tipo de movimiento')),
                ('date', models.DateTimeField(help_text='Fecha y hora en que se realizó el movimiento', verbose_name='Fecha del movimiento')),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Cantidad en la unidad correspondiente (sacos o kilos)', max_digits=10, verbose_name='Cantidad')),
                ('is_bulk', models.BooleanField(default=False, help_text='Indica si el movimiento es de producto a granel', verbose_name='Es granel')),
                ('purchase_price', models.IntegerField(help_text='Precio de compra por unidad al momento del movimiento', verbose_name='Precio de compra')),
                ('remaining_quantity', models.DecimalField(decimal_places=2, help_text='Cantidad que queda disponible de este lote', max_digits=10, verbose_name='Cantidad restante')),
                ('notes', models.TextField(blank=True, help_text='Notas adicionales sobre el movimiento', verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('parent_stock', models.ForeignKey(blank=True, help_text='Para producto a granel, referencia al saco del que proviene', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.productstock', verbose_name='Stock origen')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Movimiento de Stock',
                'verbose_name_plural': 'Movimientos de Stock',
                'ordering': ['-date', 'product'],
                'indexes': [models.Index(fields=['product', 'date'], name='products_pr_product_1bb85d_idx'), models.Index(fields=['batch_number'], name='products_pr_batch_n_4122f3_idx')],
            },
        ),
    ]
